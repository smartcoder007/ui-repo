Ref: https://www.tutorialspoint.com/nodejs

1)
Node.js is a server-side platform built on Google Chrome's JavaScript Engine 
Node.js is single-threaded application
Node.js is a platform built on Chrome's JavaScript runtime for easily building fast and scalable network applications. 
Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive 
real-time applications that run across distributed devices.



2) A Node.js application consists of the following three important components
	1. Import required modules  
	    var http = require("http");
	2. Create Server
	   http.createServer(function (request, response) {)
	3. Read request and return response
	
	
3) NPM
    It provides two main functionality
	1. Online repositories for node.js packages/modules which are searchable on search.nodejs.org
	2. Command line utility to install Node.js packages, do version management and dependency management of Node.js packages
	eg: $ npm install <Module Name>
	
4) package.json (specification)
    package.json is present in the root directory of any Node application/module and is used to define the properties of a packag
	eg: {
		"dependencies": {},
		"devDependencies": {},
		}
5) Installing a module: $ npm install <Module Name>		
5) Uninstalling a Module :  $ npm uninstall express
   
6) Updating a Module : $ npm update express
7) Search a Module : $ npm search express
8) Create a Module : This will generate the basic skeleton of the package.json.
	$ npm init
9) Publish moduel:  If everything is fine with your module, then it will be published in the repository and will be accessible to install 
using NPM like any other Node.js module eg: $ npm publish


10) Callback: 
	A callback function is called at the completion of a given task.This makes Node.js highly scalable.
	
11) Event-Driven Programming :
	In an event-driven application, there is generally a main loop that listens for events, and then triggers a callback function when one of those events is detected.The functions that listen to events act as Observers.\
	
12) Stream
    Streams are objects that let you read data from a source or write data to a destination in continuous fashion. In Node.js, there are four types of streams −

		Readable − Stream which is used for read operation.
		Writable − Stream which is used for write operation.
		Duplex − Stream which can be used for both read and write operation.
		Transform − A type of duplex stream where the output is computed based on input.
		
	Each type of Stream is an EventEmitter instance and throws several events at different instance of times. For example, some of the commonly used events are −

		data − This event is fired when there is data is available to read.
		end − This event is fired when there is no more data to read.
		error − This event is fired when there is any error receiving or writing data.
		finish − This event is fired when all the data has been flushed to underlying system.
		
		
13) Global object:
     Node.js global objects are global in nature and they are available in all modules. We do not need to include these objects in our application, rather we can use them directly.
	 eg:console.log( __filename );
	 
14) Utility module:
     These modules are very common and are frequently used while developing any Node based application.
	 
15) Web module :Creating a Web Server using Node

16) Express Framework : 
			Express is a minimal and flexible Node.js web application framework that provides a robust set of features to develop web and mobile 		applications



Reference:
1. https://closebrace.com/tutorials/2017-03-02/creating-a-simple-restful-web-app-with-nodejs-express-and-mongodb

       
	 
	 
	 
	 
	 
	 
	
			
	


